// Importa√ß√µes
const { GatewayIntentBits, Client, Collection } = require("discord.js");
const express = require('express');
const server = express();
require('dotenv').config();

// Inicializa√ß√£o do servidor Express
server.get('/', (req, res) => {
  return res.json({ message: 'Nossa API est√° online' });
});

server.listen(3000, () => {
  console.log('Servidor Express est√° funcionando na porta 3000...');
});

// Cria√ß√£o do cliente Discord
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildVoiceStates,
  ]
});

client.slashCommands = new Collection();
client.prefixCommands = new Collection();

// Carregar as APIs e handlers
// require("./api.js")(client);
require("./Handler")(client);

// Processamento de erros n√£o tratados (opcional)
// Para capturar promessas n√£o tratadas
process.on('unhandledRejection', (reason, promise) => {
  console.log(`üö´ Erro detectado na promise n√£o tratada:`, reason, promise);
});

// Para capturar exce√ß√µes n√£o tratadas (exce√ß√µes de c√≥digo)
process.on('uncaughtException', (error, origin) => {
  console.log(`üö´ Exce√ß√£o n√£o tratada detectada:`, error, origin);
});

// Login do bot
client.login(process.env.clientToken).then(() => {
  console.log(`‚úÖ Bot logado com sucesso!`);
}).catch((err) => {
  console.log(`‚ùå Erro ao logar o bot: ${err}`);
});
